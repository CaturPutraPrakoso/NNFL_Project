%% data done
%% initial population done.
%% need to think and include various constants like mutation rate=0.015, uniform_rate=0.5,   etc.
%% call fcm fn on initial pop and store fitness values. fitness is an array of 20 nodes.

%% load data

pop_one = ['100010100111111010001111111101011011101110000001010111110101';'100011100000010110011011110110011111000011000101011000000101';
       '100010100111111010001111111101011011101110000001010111110101';'100011100000010110011011110110011111000011000101011000000101';
       '100010100111111010001111111101011011101110000001010111110101';'100011100000010110011011110110011111000011000101011000000101';
       '100010100111111010001111111101011011101110000001010111110101';'100011100000010110011011110110011111000011000101011000000101';
       '100010100111111010001111111101011011101110000001010111110101';'100011100000010110011011110110011111000011000101011000000101';
       '100010100111111010001111111101011011101110000001010111110101';'100011100000010110011011110110011111000011000101011000000101';
       '100010100111111010001111111101011011101110000001010111110101';'100011100000010110011011110110011111000011000101011000000101';
       '100010100111111010001111111101011011101110000001010111110101';'100011100000010110011011110110011111000011000101011000000101';
       '100010100111111010001111111101011011101110000001010111110101';'100011100000010110011011110110011111000011000101011000000101';
       '100010100111111010001111111101011011101110000001010111110101';'100011100000010110011011110110011111000011000101011000000101'];

     
p =[];
for j=1:20
for i=1:60
    x = randi([0 1],1,1);
    q = int2str(x);
    pop_one(j,i) = q;
end

end


%% starting GA loop

for i = 1:500
	pop_two = [];

	%% elitism
		%% to carry over the best chromosome from the last generation.
		%% getFittest will return the best chromosome.
	
	pop_two = [getFittest(pop_one, fitness)];
	
	%% crossover
		%% we will call the tournament selection in crossover

		for j = 1:20
			indiv1 = tournament_select(pop_one,fitness);
			indiv2 = tournament_select(pop_one,fitness);
			indiv_new = crossover(indiv1,indiv2);
			pop_two = [pop_two;indiv_new];
		end
	
	%% mutation

		for j = 1:20
			mutate(pop_two(j,:));
		end

	%% convert the population in decimal for the fcm fn
	%% call the fcm function.
	%% fcm function will call the fitness function and return the fitness values and best chromosomes.
	%% store the best results.

	pop_one = pop_two;
end

%% plot functions
